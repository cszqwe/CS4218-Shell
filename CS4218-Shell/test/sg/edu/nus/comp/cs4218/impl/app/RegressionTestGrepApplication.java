package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTestGrepApplication {

	public static boolean debug = false;

	@Test
	public void test001() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test001");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test002() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test002");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test003() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test003");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test004() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test004");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test005() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test005");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

	}

	@Test
	public void test006() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test006");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

	}

	@Test
	public void test007() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test007");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String[] str_array18 = new java.lang.String[] { "", "hi!", "", "hi!", "hi!" };
		java.io.InputStream inputStream19 = null;
		java.io.OutputStream outputStream20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array18, inputStream19, outputStream20);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array18);

	}

	@Test
	public void test008() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test008");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test009() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test009");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str30 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str32 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Invalid Pattern" + "'", str32.equals("Invalid Pattern"));

	}

	@Test
	public void test010() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test010");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str29 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str31 = grepApplication0.grepFromOneFile("");
		java.lang.String str33 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str35 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Invalid Pattern" + "'", str29.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str35 + "' != '" + "Invalid Pattern" + "'", str35.equals("Invalid Pattern"));

	}

	@Test
	public void test011() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test011");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String[] str_array22 = new java.lang.String[] { "hi!", "", "Invalid Pattern", "hi!" };
		java.io.InputStream inputStream23 = null;
		java.io.OutputStream outputStream24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array22, inputStream23, outputStream24);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array22);

	}

	@Test
	public void test012() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test012");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str24 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

	}

	@Test
	public void test013() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test013");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str27 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test014() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test014");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str24 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str27 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str31 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));

	}

	@Test
	public void test015() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test015");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String[] str_array20 = new java.lang.String[] { "Invalid Pattern", "", "hi!", "" };
		java.io.InputStream inputStream21 = null;
		java.io.OutputStream outputStream22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array20, inputStream21, outputStream22);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array20);

	}

	@Test
	public void test016() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test016");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test017() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test017");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test018() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test018");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromStdin("");
		java.lang.String str30 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str32 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));

	}

	@Test
	public void test019() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test019");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test020() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test020");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("", "");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test021() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test021");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str27 = grepApplication0.grepFromMultipleFiles("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str29 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test022() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test022");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String[] str_array16 = null;
		java.io.InputStream inputStream17 = null;
		java.io.OutputStream outputStream18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array16, inputStream17, outputStream18);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

	}

	@Test
	public void test023() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test023");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str28 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str30 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Invalid Pattern" + "'", str28.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

	}

	@Test
	public void test024() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test024");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String[] str_array13 = new java.lang.String[] {};
		java.io.InputStream inputStream14 = null;
		java.io.OutputStream outputStream15 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array13, inputStream14, outputStream15);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array13);

	}

	@Test
	public void test025() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test025");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test026() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test026");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test027() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test027");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test028() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test028");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test029() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test029");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String[] str_array23 = new java.lang.String[] {};
		java.io.InputStream inputStream24 = null;
		java.io.OutputStream outputStream25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array23, inputStream24, outputStream25);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array23);

	}

	@Test
	public void test030() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test030");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str19 = grepApplication0.grepFromStdin("");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test031() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test031");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str20 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test032() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test032");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test033() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test033");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test034() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test034");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str8 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str16 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

	}

	@Test
	public void test035() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test035");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str24 = grepApplication0.grepFromOneFile("");
		java.lang.String str26 = grepApplication0.grepFromOneFile("");
		java.lang.String str28 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

	}

	@Test
	public void test036() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test036");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
		java.io.InputStream inputStream28 = null;
		java.io.OutputStream outputStream29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array27, inputStream28, outputStream29);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array27);

	}

	@Test
	public void test037() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test037");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test038() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test038");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

	}

	@Test
	public void test039() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test039");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test040() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test040");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepFromOneFile("");
		java.lang.String str6 = grepApplication0.grepFromStdin("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array15 = new java.lang.String[] { "", "Invalid Pattern", "", "hi!" };
		java.io.InputStream inputStream16 = null;
		java.io.OutputStream outputStream17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array15, inputStream16, outputStream17);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array15);

	}

	@Test
	public void test041() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test041");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test042() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test042");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test043() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test043");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str13 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test044() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test044");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str28 = grepApplication0.grepFromStdin("");
		java.lang.String[] str_array35 = new java.lang.String[] { "", "hi!", "Invalid Pattern", "Invalid Pattern",
				"Invalid Pattern", "hi!" };
		java.io.InputStream inputStream36 = null;
		java.io.OutputStream outputStream37 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array35, inputStream36, outputStream37);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array35);

	}

	@Test
	public void test045() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test045");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("", "");
		java.lang.String str15 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

	}

	@Test
	public void test046() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test046");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str20 = grepApplication0.grepFromContent("", "");
		java.lang.String str23 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

	}

	@Test
	public void test047() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test047");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test048() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test048");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

	}

	@Test
	public void test049() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test049");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str25 = grepApplication0.grepFromStdin("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

	}

	@Test
	public void test050() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test050");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str28 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str30 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Invalid Pattern" + "'", str28.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));

	}

	@Test
	public void test051() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test051");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("", "");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepFromContent("", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test052() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test052");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromOneFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str26 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

	}

	@Test
	public void test053() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test053");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test054() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test054");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test055() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test055");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test056() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test056");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

	}

	@Test
	public void test057() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test057");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str23 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test058() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test058");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str11 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test059() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test059");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test060() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test060");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromContent("Invalid Pattern", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test061() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test061");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepFromStdin("");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");
		java.lang.String str23 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test062() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test062");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test063() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test063");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str23 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test064() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test064");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str19 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test065() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test065");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromContent("", "");
		java.lang.String str28 = grepApplication0.grepFromContent("", "");
		java.lang.String str30 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str32 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));

	}

	@Test
	public void test066() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test066");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test067() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test067");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str26 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

	}

	@Test
	public void test068() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test068");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

	}

	@Test
	public void test069() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test069");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test070() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test070");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test071() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test071");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

	}

	@Test
	public void test072() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test072");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test073() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test073");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str10 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

	}

	@Test
	public void test074() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test074");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str7 = grepApplication0.grepFromContent("", "");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test075() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test075");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromContent("", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test076() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test076");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test077() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test077");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test078() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test078");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("", "");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str25 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

	}

	@Test
	public void test079() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test079");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("", "");
		java.lang.String str24 = grepApplication0.grepFromStdin("");
		java.lang.String str26 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str28 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

	}

	@Test
	public void test080() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test080");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("", "");
		java.lang.String str21 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test081() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test081");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));

	}

	@Test
	public void test082() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test082");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str24 = grepApplication0.grepFromStdin("");
		java.lang.String str26 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));

	}

	@Test
	public void test083() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test083");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

	}

	@Test
	public void test084() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test084");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test085() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test085");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");
		java.lang.String[] str_array22 = new java.lang.String[] {};
		java.io.InputStream inputStream23 = null;
		java.io.OutputStream outputStream24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array22, inputStream23, outputStream24);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array22);

	}

	@Test
	public void test086() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test086");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str28 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

	}

	@Test
	public void test087() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test087");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test088() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test088");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("", "");
		java.lang.String str24 = grepApplication0.grepFromStdin("");
		java.lang.String str26 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str28 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

	}

	@Test
	public void test089() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test089");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

	}

	@Test
	public void test090() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test090");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

	}

	@Test
	public void test091() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test091");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test092() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test092");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str30 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str32 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Invalid Pattern" + "'", str32.equals("Invalid Pattern"));

	}

	@Test
	public void test093() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test093");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str6 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test094() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test094");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("", "");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test095() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test095");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

	}

	@Test
	public void test096() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test096");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str12 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

	}

	@Test
	public void test097() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test097");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String[] str_array20 = new java.lang.String[] { "Invalid Pattern", "hi!", "hi!", "",
				"Invalid Pattern" };
		java.io.InputStream inputStream21 = null;
		java.io.OutputStream outputStream22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array20, inputStream21, outputStream22);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array20);

	}

	@Test
	public void test098() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test098");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test099() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test099");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str23 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromStdin("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test100() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test100");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test101() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test101");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str18 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

	}

	@Test
	public void test102() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test102");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("", "");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test103() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test103");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

	}

	@Test
	public void test104() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test104");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test105() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test105");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str20 = grepApplication0.grepFromContent("", "");
		java.lang.String str22 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str29 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test106() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test106");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test107() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test107");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str31 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));

	}

	@Test
	public void test108() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test108");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String[] str_array19 = new java.lang.String[] {};
		java.io.InputStream inputStream20 = null;
		java.io.OutputStream outputStream21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array19, inputStream20, outputStream21);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array19);

	}

	@Test
	public void test109() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test109");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str7 = grepApplication0.grepFromContent("", "");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromContent("", "Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test110() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test110");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test111() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test111");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test112() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test112");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test113() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test113");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String[] str_array15 = new java.lang.String[] { "hi!", "Invalid Pattern", "Invalid Pattern",
				"Invalid Pattern" };
		java.io.InputStream inputStream16 = null;
		java.io.OutputStream outputStream17 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array15, inputStream16, outputStream17);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array15);

	}

	@Test
	public void test114() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test114");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test115() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test115");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array21 = new java.lang.String[] { "Invalid Pattern", "hi!", "", "Invalid Pattern", "" };
		java.io.InputStream inputStream22 = null;
		java.io.OutputStream outputStream23 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array21, inputStream22, outputStream23);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array21);

	}

	@Test
	public void test116() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test116");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromOneFile("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

	}

	@Test
	public void test117() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test117");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String[] str_array19 = new java.lang.String[] { "Invalid Pattern", "Invalid Pattern", "", "hi!",
				"Invalid Pattern" };
		java.io.InputStream inputStream20 = null;
		java.io.OutputStream outputStream21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array19, inputStream20, outputStream21);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array19);

	}

	@Test
	public void test118() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test118");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test119() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test119");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test120() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test120");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test121() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test121");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test122() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test122");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

	}

	@Test
	public void test123() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test123");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String[] str_array11 = null;
		java.io.InputStream inputStream12 = null;
		java.io.OutputStream outputStream13 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array11, inputStream12, outputStream13);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

	}

	@Test
	public void test124() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test124");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test125() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test125");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str11 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

	}

	@Test
	public void test126() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test126");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

	}

	@Test
	public void test127() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test127");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

	}

	@Test
	public void test128() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test128");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromStdin("");
		java.lang.String str23 = grepApplication0.grepFromStdin("");
		java.lang.String str25 = grepApplication0.grepFromStdin("");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str29 = grepApplication0.grepFromStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str31 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));

	}

	@Test
	public void test129() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test129");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str26 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

	}

	@Test
	public void test130() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test130");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test131() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test131");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepFromStdin("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

	}

	@Test
	public void test132() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test132");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test133() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test133");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str9 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str12 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str16 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test134() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test134");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

	}

	@Test
	public void test135() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test135");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

	}

	@Test
	public void test136() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test136");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromContent("hi!", "");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str26 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

	}

	@Test
	public void test137() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test137");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test138() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test138");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test139() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test139");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("");
		java.lang.String str24 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

	}

	@Test
	public void test140() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test140");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str19 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test141() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test141");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

	}

	@Test
	public void test142() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test142");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test143() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test143");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str18 = grepApplication0.grepFromContent("", "");
		java.lang.String str21 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str24 = grepApplication0.grepFromContent("", "");
		java.lang.String str27 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test144() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test144");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str14 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str29 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Invalid Pattern" + "'", str29.equals("Invalid Pattern"));

	}

	@Test
	public void test145() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test145");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromContent("", "");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test146() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test146");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str32 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Invalid Pattern" + "'", str29.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Invalid Pattern" + "'", str32.equals("Invalid Pattern"));

	}

	@Test
	public void test147() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test147");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str23 = grepApplication0.grepFromContent("", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test148() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test148");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str25 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test149() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test149");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str7 = grepApplication0.grepFromContent("", "");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

	}

	@Test
	public void test150() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test150");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("");
		java.lang.String[] str_array16 = null;
		java.io.InputStream inputStream17 = null;
		java.io.OutputStream outputStream18 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array16, inputStream17, outputStream18);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test151() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test151");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test152() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test152");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("", "");
		java.lang.String str24 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str29 = grepApplication0.grepFromContent("hi!", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

	}

	@Test
	public void test153() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test153");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

	}

	@Test
	public void test154() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test154");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

	}

	@Test
	public void test155() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test155");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test156() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test156");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test157() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test157");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str20 = grepApplication0.grepFromContent("", "");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

	}

	@Test
	public void test158() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test158");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test159() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test159");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test160() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test160");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test161() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test161");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String[] str_array24 = new java.lang.String[] { "Invalid Pattern", "", "hi!" };
		java.io.InputStream inputStream25 = null;
		java.io.OutputStream outputStream26 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array24, inputStream25, outputStream26);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array24);

	}

	@Test
	public void test162() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test162");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str4 = grepApplication0.grepFromOneFile("");
		java.lang.String str6 = grepApplication0.grepFromStdin("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test163() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test163");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test164() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test164");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str24 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test165() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test165");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test166() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test166");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str8 = grepApplication0.grepFromContent("", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

	}

	@Test
	public void test167() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test167");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str19 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str24 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String[] str_array25 = new java.lang.String[] {};
		java.io.InputStream inputStream26 = null;
		java.io.OutputStream outputStream27 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array25, inputStream26, outputStream27);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array25);

	}

	@Test
	public void test168() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test168");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test169() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test169");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

	}

	@Test
	public void test170() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test170");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str26 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str28 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

	}

	@Test
	public void test171() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test171");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test172() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test172");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test173() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test173");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String[] str_array27 = new java.lang.String[] { "" };
		java.io.InputStream inputStream28 = null;
		java.io.OutputStream outputStream29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array27, inputStream28, outputStream29);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array27);

	}

	@Test
	public void test174() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test174");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str7 = grepApplication0.grepFromContent("", "");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str24 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test175() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test175");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test176() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test176");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

	}

	@Test
	public void test177() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test177");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String[] str_array29 = new java.lang.String[] { "hi!", "", "Invalid Pattern", "hi!", "",
				"Invalid Pattern" };
		java.io.InputStream inputStream30 = null;
		java.io.OutputStream outputStream31 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array29, inputStream30, outputStream31);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array29);

	}

	@Test
	public void test178() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test178");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

	}

	@Test
	public void test179() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test179");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test180() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test180");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test181() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test181");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("", "");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str23 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test182() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test182");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepFromStdin("");
		java.lang.String[] str_array21 = new java.lang.String[] { "" };
		java.io.InputStream inputStream22 = null;
		java.io.OutputStream outputStream23 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array21, inputStream22, outputStream23);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array21);

	}

	@Test
	public void test183() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test183");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str28 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str30 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Invalid Pattern" + "'", str28.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

	}

	@Test
	public void test184() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test184");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test185() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test185");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromOneFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test186() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test186");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test187() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test187");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepFromStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test188() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test188");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test189() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test189");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test190() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test190");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str14 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test191() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test191");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str14 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test192() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test192");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str19 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

	}

	@Test
	public void test193() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test193");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str24 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test194() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test194");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String[] str_array23 = new java.lang.String[] { "hi!", "hi!", "", "Invalid Pattern" };
		java.io.InputStream inputStream24 = null;
		java.io.OutputStream outputStream25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array23, inputStream24, outputStream25);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array23);

	}

	@Test
	public void test195() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test195");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String[] str_array20 = new java.lang.String[] { "", "Invalid Pattern" };
		java.io.InputStream inputStream21 = null;
		java.io.OutputStream outputStream22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array20, inputStream21, outputStream22);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array20);

	}

	@Test
	public void test196() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test196");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test197() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test197");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test198() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test198");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromStdin("");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

	}

	@Test
	public void test199() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test199");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str24 = grepApplication0.grepFromStdin("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test200() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test200");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("", "");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

	}

	@Test
	public void test201() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test201");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test202() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test202");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str22 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test203() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test203");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str20 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test204() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test204");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test205() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test205");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str23 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test206() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test206");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test207() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test207");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

	}

	@Test
	public void test208() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test208");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

	}

	@Test
	public void test209() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test209");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

	}

	@Test
	public void test210() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test210");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str25 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "Invalid Pattern" + "'", str29.equals("Invalid Pattern"));

	}

	@Test
	public void test211() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test211");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test212() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test212");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

	}

	@Test
	public void test213() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test213");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str27 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test214() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test214");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test215() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test215");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test216() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test216");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str25 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test217() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test217");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String[] str_array22 = new java.lang.String[] { "Invalid Pattern", "hi!", "Invalid Pattern" };
		java.io.InputStream inputStream23 = null;
		java.io.OutputStream outputStream24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array22, inputStream23, outputStream24);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array22);

	}

	@Test
	public void test218() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test218");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str4 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

	}

	@Test
	public void test219() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test219");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test220() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test220");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test221() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test221");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepFromStdin("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array28 = new java.lang.String[] { "hi!", "hi!", "hi!", "hi!", "", "" };
		java.io.InputStream inputStream29 = null;
		java.io.OutputStream outputStream30 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array28, inputStream29, outputStream30);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array28);

	}

	@Test
	public void test222() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test222");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("");
		java.lang.String str24 = grepApplication0.grepFromOneFile("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test223() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test223");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str6 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test224() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test224");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test225() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test225");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str4 = grepApplication0.grepFromOneFile("");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

	}

	@Test
	public void test226() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test226");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test227() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test227");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

	}

	@Test
	public void test228() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test228");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test229() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test229");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

	}

	@Test
	public void test230() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test230");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromStdin("hi!");
		java.lang.String[] str_array26 = new java.lang.String[] { "hi!", "hi!", "hi!" };
		java.io.InputStream inputStream27 = null;
		java.io.OutputStream outputStream28 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array26, inputStream27, outputStream28);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array26);

	}

	@Test
	public void test231() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test231");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str28 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str30 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str32 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Invalid Pattern" + "'", str28.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str32 + "' != '" + "Invalid Pattern" + "'", str32.equals("Invalid Pattern"));

	}

	@Test
	public void test232() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test232");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromOneFile("");
		java.lang.String str8 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

	}

	@Test
	public void test233() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test233");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test234() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test234");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str26 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test235() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test235");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String[] str_array20 = new java.lang.String[] { "Invalid Pattern", "hi!" };
		java.io.InputStream inputStream21 = null;
		java.io.OutputStream outputStream22 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array20, inputStream21, outputStream22);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array20);

	}

	@Test
	public void test236() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test236");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test237() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test237");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str19 = grepApplication0.grepFromStdin("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test238() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test238");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

	}

	@Test
	public void test239() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test239");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str25 = grepApplication0.grepFromOneFile("");
		java.lang.String str28 = grepApplication0.grepFromContent("hi!", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

	}

	@Test
	public void test240() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test240");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test241() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test241");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromOneFile("");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

	}

	@Test
	public void test242() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test242");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str27 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str30 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));

	}

	@Test
	public void test243() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test243");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str13 = grepApplication0.grepFromStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test244() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test244");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromStdin("");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

	}

	@Test
	public void test245() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test245");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test246() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test246");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array24 = new java.lang.String[] { "Invalid Pattern", "hi!", "hi!" };
		java.io.InputStream inputStream25 = null;
		java.io.OutputStream outputStream26 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array24, inputStream25, outputStream26);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array24);

	}

	@Test
	public void test247() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test247");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String[] str_array17 = new java.lang.String[] { "hi!", "Invalid Pattern" };
		java.io.InputStream inputStream18 = null;
		java.io.OutputStream outputStream19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array17, inputStream18, outputStream19);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array17);

	}

	@Test
	public void test248() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test248");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test249() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test249");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test250() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test250");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test251() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test251");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

	}

	@Test
	public void test252() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test252");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str8 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str11 = grepApplication0.grepFromContent("", "");
		java.lang.String str13 = grepApplication0.grepFromStdin("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test253() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test253");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test254() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test254");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test255() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test255");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("hi!", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

	}

	@Test
	public void test256() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test256");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

	}

	@Test
	public void test257() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test257");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str17 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test258() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test258");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str20 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test259() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test259");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test260() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test260");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test261() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test261");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

	}

	@Test
	public void test262() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test262");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test263() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test263");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test264() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test264");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test265() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test265");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepFromStdin("");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test266() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test266");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test267() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test267");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

	}

	@Test
	public void test268() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test268");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("");
		java.lang.String str23 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test269() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test269");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test270() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test270");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str14 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str29 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

	}

	@Test
	public void test271() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test271");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test272() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test272");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

	}

	@Test
	public void test273() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test273");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test274() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test274");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

	}

	@Test
	public void test275() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test275");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String[] str_array23 = new java.lang.String[] {};
		java.io.InputStream inputStream24 = null;
		java.io.OutputStream outputStream25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array23, inputStream24, outputStream25);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array23);

	}

	@Test
	public void test276() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test276");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test277() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test277");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("");
		java.lang.String str15 = grepApplication0.grepFromContent("", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test278() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test278");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test279() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test279");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepFromContent("", "");
		java.lang.String str24 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test280() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test280");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));

	}

	@Test
	public void test281() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test281");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str18 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test282() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test282");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String[] str_array28 = new java.lang.String[] { "Invalid Pattern", "Invalid Pattern", "", "" };
		java.io.InputStream inputStream29 = null;
		java.io.OutputStream outputStream30 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array28, inputStream29, outputStream30);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array28);

	}

	@Test
	public void test283() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test283");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test284() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test284");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str14 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test285() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test285");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test286() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test286");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str31 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str33 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Invalid Pattern" + "'", str31.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Invalid Pattern" + "'", str33.equals("Invalid Pattern"));

	}

	@Test
	public void test287() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test287");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str4 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str6 = grepApplication0.grepFromStdin("");
		java.lang.String str9 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

	}

	@Test
	public void test288() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test288");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test289() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test289");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str20 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str26 = grepApplication0.getContentFromFile("");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test290() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test290");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test291() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test291");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test292() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test292");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String[] str_array24 = new java.lang.String[] { "hi!", "hi!" };
		java.io.InputStream inputStream25 = null;
		java.io.OutputStream outputStream26 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array24, inputStream25, outputStream26);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array24);

	}

	@Test
	public void test293() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test293");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str21 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str25 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test294() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test294");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));

	}

	@Test
	public void test295() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test295");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");
		java.lang.String str23 = grepApplication0.grepFromStdin("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));

	}

	@Test
	public void test296() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test296");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test297() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test297");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test298() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test298");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String[] str_array24 = new java.lang.String[] { "Invalid Pattern", "", "hi!", "hi!", "hi!",
				"Invalid Pattern" };
		java.io.InputStream inputStream25 = null;
		java.io.OutputStream outputStream26 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array24, inputStream25, outputStream26);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array24);

	}

	@Test
	public void test299() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test299");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromContent("Invalid Pattern", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test300() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test300");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str17 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test301() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test301");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromContent("", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test302() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test302");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test303() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test303");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test304() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test304");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

	@Test
	public void test305() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test305");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String[] str_array22 = new java.lang.String[] { "Invalid Pattern" };
		java.io.InputStream inputStream23 = null;
		java.io.OutputStream outputStream24 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array22, inputStream23, outputStream24);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array22);

	}

	@Test
	public void test306() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test306");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test307() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test307");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

	}

	@Test
	public void test308() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test308");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str24 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));

	}

	@Test
	public void test309() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test309");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str23 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test310() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test310");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

	}

	@Test
	public void test311() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test311");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str27 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str29 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
		java.io.InputStream inputStream32 = null;
		java.io.OutputStream outputStream33 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array31, inputStream32, outputStream33);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array31);

	}

	@Test
	public void test312() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test312");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("Invalid Pattern", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test313() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test313");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

	}

	@Test
	public void test314() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test314");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str6 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String[] str_array17 = new java.lang.String[] { "hi!", "Invalid Pattern", "hi!", "" };
		java.io.InputStream inputStream18 = null;
		java.io.OutputStream outputStream19 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array17, inputStream18, outputStream19);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array17);

	}

	@Test
	public void test315() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test315");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str19 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test316() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test316");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

	}

	@Test
	public void test317() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test317");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str10 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

	}

	@Test
	public void test318() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test318");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test319() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test319");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test320() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test320");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

	}

	@Test
	public void test321() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test321");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromOneFile("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test322() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test322");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

	}

	@Test
	public void test323() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test323");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String[] str_array23 = new java.lang.String[] { "hi!", "hi!" };
		java.io.InputStream inputStream24 = null;
		java.io.OutputStream outputStream25 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array23, inputStream24, outputStream25);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array23);

	}

	@Test
	public void test324() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test324");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str28 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));

	}

	@Test
	public void test325() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test325");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str21 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test326() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test326");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test327() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test327");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

	}

	@Test
	public void test328() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test328");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test329() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test329");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test330() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test330");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("", "");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test331() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test331");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("", "");
		java.lang.String str17 = grepApplication0.grepFromContent("", "");
		java.lang.String str19 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromContent("", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

	}

	@Test
	public void test332() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test332");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str16 = grepApplication0.grepFromStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str18 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test333() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test333");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
		java.io.InputStream inputStream28 = null;
		java.io.OutputStream outputStream29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array27, inputStream28, outputStream29);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array27);

	}

	@Test
	public void test334() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test334");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str20 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str23 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str25 = grepApplication0.grepFromStdin("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

	}

	@Test
	public void test335() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test335");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String[] str_array19 = new java.lang.String[] { "Invalid Pattern" };
		java.io.InputStream inputStream20 = null;
		java.io.OutputStream outputStream21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array19, inputStream20, outputStream21);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array19);

	}

	@Test
	public void test336() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test336");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test337() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test337");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String[] str_array19 = new java.lang.String[] { "", "Invalid Pattern", "" };
		java.io.InputStream inputStream20 = null;
		java.io.OutputStream outputStream21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array19, inputStream20, outputStream21);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array19);

	}

	@Test
	public void test338() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test338");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String[] str_array21 = new java.lang.String[] { "Invalid Pattern", "hi!", "Invalid Pattern" };
		java.io.InputStream inputStream22 = null;
		java.io.OutputStream outputStream23 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array21, inputStream22, outputStream23);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array21);

	}

	@Test
	public void test339() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test339");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str24 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

	}

	@Test
	public void test340() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test340");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str4 = grepApplication0.grepFromOneFile("");
		java.lang.String str6 = grepApplication0.grepFromStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str8 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

	}

	@Test
	public void test341() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test341");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str15 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str19 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str21 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str26 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str28 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str30 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Invalid Pattern" + "'", str28.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Invalid Pattern" + "'", str30.equals("Invalid Pattern"));

	}

	@Test
	public void test342() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test342");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test343() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test343");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

	}

	@Test
	public void test344() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test344");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test345() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test345");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromContent("hi!", "");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

	}

	@Test
	public void test346() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test346");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
		java.io.InputStream inputStream19 = null;
		java.io.OutputStream outputStream20 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array18, inputStream19, outputStream20);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array18);

	}

	@Test
	public void test347() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test347");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test348() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test348");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

	}

	@Test
	public void test349() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test349");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("", "hi!");
		java.lang.String str14 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str18 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str27 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

	}

	@Test
	public void test350() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test350");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str10 = grepApplication0.grepFromOneFile("");
		java.lang.String str12 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

	}

	@Test
	public void test351() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test351");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromOneFile("");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "hi!" + "'", str4.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

	}

	@Test
	public void test352() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test352");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
		java.io.InputStream inputStream28 = null;
		java.io.OutputStream outputStream29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array27, inputStream28, outputStream29);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array27);

	}

	@Test
	public void test353() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test353");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

	}

	@Test
	public void test354() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test354");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromMultipleFiles("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));

	}

	@Test
	public void test355() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test355");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str27 = grepApplication0.grepFromMultipleFiles("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));

	}

	@Test
	public void test356() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test356");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));

	}

	@Test
	public void test357() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test357");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

	}

	@Test
	public void test358() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test358");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));

	}

	@Test
	public void test359() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test359");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str24 = grepApplication0.grepFromOneFile("");
		java.lang.String str26 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "Invalid Pattern" + "'", str26.equals("Invalid Pattern"));

	}

	@Test
	public void test360() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test360");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

	}

	@Test
	public void test361() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test361");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromOneFile("Invalid Pattern");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str22 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test362() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test362");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str11 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str13 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str17 = grepApplication0.grepFromStdin("");
		java.lang.String str20 = grepApplication0.grepFromContent("hi!", "Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromContent("", "hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test363() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test363");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str16 = grepApplication0.getContentFromFile("hi!");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

	}

	@Test
	public void test364() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test364");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str16 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str22 = grepApplication0.grepFromStdin("");
		java.lang.String str24 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str26 = grepApplication0.grepFromOneFile("");
		java.lang.String[] str_array27 = null;
		java.io.InputStream inputStream28 = null;
		java.io.OutputStream outputStream29 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array27, inputStream28, outputStream29);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str24 + "' != '" + "Invalid Pattern" + "'", str24.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));

	}

	@Test
	public void test365() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test365");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str6 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepFromOneFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepFromOneFile("");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String[] str_array19 = new java.lang.String[] { "hi!", "hi!" };
		java.io.InputStream inputStream20 = null;
		java.io.OutputStream outputStream21 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array19, inputStream20, outputStream21);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array19);

	}

	@Test
	public void test366() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test366");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str7 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str19 = grepApplication0.grepFromOneFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

	}

	@Test
	public void test367() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test367");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test368() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test368");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str15 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str18 = grepApplication0.grepFromContent("", "");
		java.lang.String str20 = grepApplication0.grepFromOneFile("");
		java.lang.String str22 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));

	}

	@Test
	public void test369() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test369");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str23 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

	}

	@Test
	public void test370() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test370");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str14 = grepApplication0.grepFromOneFile("");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

	}

	@Test
	public void test371() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test371");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str15 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str23 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Invalid Pattern" + "'", str19.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "Invalid Pattern" + "'", str23.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "Invalid Pattern" + "'", str25.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test372() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test372");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepFromStdin("");
		java.lang.String str15 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str18 = grepApplication0.grepFromContent("", "");
		java.lang.String str21 = grepApplication0.grepFromContent("hi!", "");
		java.lang.String str23 = grepApplication0.grepFromStdin("");
		java.lang.String str25 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str27 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Invalid Pattern" + "'", str27.equals("Invalid Pattern"));

	}

	@Test
	public void test373() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test373");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str6 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str10 = grepApplication0.grepFromOneFile("Invalid Pattern");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str16 = grepApplication0.grepInvalidPatternInStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "Invalid Pattern" + "'", str2.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "Invalid Pattern" + "'", str16.equals("Invalid Pattern"));

	}

	@Test
	public void test374() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test374");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test375() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test375");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str13 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str15 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str17 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str19 = grepApplication0.grepFromOneFile("");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test376() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test376");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str17 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromStdin("hi!");
		// The following exception was thrown during execution in test
		// generation
		try {
			java.lang.String str21 = grepApplication0.getContentFromFile("Invalid Pattern");
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "Invalid Pattern" + "'", str15.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

	}

	@Test
	public void test377() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test377");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("");
		java.lang.String str5 = grepApplication0.grepFromContent("hi!", "hi!");
		java.lang.String str7 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str9 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str11 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str13 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str19 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Invalid Pattern" + "'", str7.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str9 + "' != '" + "Invalid Pattern" + "'", str9.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

	}

	@Test
	public void test378() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test378");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromMultipleFiles("Invalid Pattern");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str22 = grepApplication0.grepFromMultipleFiles("hi!");
		java.lang.String str25 = grepApplication0.grepFromContent("Invalid Pattern", "hi!");
		java.lang.String[] str_array30 = new java.lang.String[] { "hi!", "hi!", "", "" };
		java.io.InputStream inputStream31 = null;
		java.io.OutputStream outputStream32 = null;
		// The following exception was thrown during execution in test
		// generation
		try {
			grepApplication0.run(str_array30, inputStream31, outputStream32);
			org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.GrepException");
		} catch (sg.edu.nus.comp.cs4218.exception.GrepException e) {
			// Expected exception.
		}

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertNotNull(str_array30);

	}

	@Test
	public void test379() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test379");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("");
		java.lang.String str11 = grepApplication0.grepFromContent("Invalid Pattern", "");
		java.lang.String str13 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str15 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str22 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str11 + "' != '" + "Invalid Pattern" + "'", str11.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Invalid Pattern" + "'", str13.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Invalid Pattern" + "'", str22.equals("Invalid Pattern"));

	}

	@Test
	public void test380() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test380");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInFile("Invalid Pattern");
		java.lang.String str14 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str19 = grepApplication0.grepFromContent("", "Invalid Pattern");
		java.lang.String str21 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str23 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str25 = grepApplication0.grepFromStdin("hi!");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str21 + "' != '" + "Invalid Pattern" + "'", str21.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));

	}

	@Test
	public void test381() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test381");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepFromStdin("Invalid Pattern");
		java.lang.String str8 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str10 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str12 = grepApplication0.grepInvalidPatternInStdin("hi!");
		java.lang.String str14 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str16 = grepApplication0.grepFromOneFile("");
		java.lang.String str18 = grepApplication0.grepInvalidPatternInStdin("Invalid Pattern");
		java.lang.String str20 = grepApplication0.grepFromStdin("Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Invalid Pattern" + "'", str8.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Invalid Pattern" + "'", str10.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Invalid Pattern" + "'", str12.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "Invalid Pattern" + "'", str14.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Invalid Pattern" + "'", str18.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str20 + "' != '" + "Invalid Pattern" + "'", str20.equals("Invalid Pattern"));

	}

	@Test
	public void test382() throws Throwable {

		if (debug) {
			System.out.format("%n%s%n", "RegressionTest6.test382");
		}

		sg.edu.nus.comp.cs4218.impl.app.GrepApplication grepApplication0 = new sg.edu.nus.comp.cs4218.impl.app.GrepApplication();
		java.lang.String str2 = grepApplication0.grepFromOneFile("hi!");
		java.lang.String str4 = grepApplication0.grepInvalidPatternInStdin("");
		java.lang.String str6 = grepApplication0.grepInvalidPatternInFile("hi!");
		java.lang.String str8 = grepApplication0.grepFromStdin("");
		java.lang.String str10 = grepApplication0.grepFromStdin("hi!");
		java.lang.String str12 = grepApplication0.grepFromMultipleFiles("");
		java.lang.String str14 = grepApplication0.grepFromStdin("");
		java.lang.String str17 = grepApplication0.grepFromContent("Invalid Pattern", "Invalid Pattern");

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str4 + "' != '" + "Invalid Pattern" + "'", str4.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Invalid Pattern" + "'", str6.equals("Invalid Pattern"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));

		// Regression assertion (captures the current behavior of the code)
		org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Invalid Pattern" + "'", str17.equals("Invalid Pattern"));

	}

}
